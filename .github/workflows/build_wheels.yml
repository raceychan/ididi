name: Release

on:
  push:
    branches:
      - "build"
      - "release"
      - "master"
      - "test-release"

jobs:
  build-sdist:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871  # v4.2.1
      with:
        fetch-depth: 50
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3  # v5.2.0

    - name: Build source distribution
      run: |
        python -m pip install -U cython setuptools wheel
        python setup.py build_ext --inplace
        python setup.py sdist

    - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882  # v4.4.3
      with:
        name: dist-sdist
        path: dist/*.tar.*

  build-wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        cibw_arch: ["auto64", "aarch64", "universal2"]
        cibw_python:
          - "cp39"
          - "cp310"
          - "cp311"
          - "cp312"
          - "cp313"
        exclude:
          - os: ubuntu-latest
            cibw_arch: universal2
          - os: macos-latest
            cibw_arch: aarch64
          - os: windows-latest
            cibw_arch: universal2
          - os: windows-latest
            cibw_arch: aarch64

    steps:
      - uses: actions/checkout@v4.2.1
        with:
          fetch-depth: 50
          submodules: true

      - name: Install dependencies
        run: pip install typing_extensions pytest pytest-cov pytest-asyncio setuptools

      - name: Set up QEMU
        if: matrix.os == 'ubuntu-latest' && matrix.cibw_arch == 'aarch64'
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf  # v3.2.0
        with:
          platforms: arm64

      - uses: pypa/cibuildwheel@v2.22.0
        env:
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BUILD: ${{ matrix.cibw_python }}-*
          CIBW_ARCHS: ${{ matrix.cibw_arch }}
          # CIBW_TEST_REQUIRES: pytest==8.3.3 pytest-asyncio==0.24.0 pytest-cov==6.0.0 graphviz>=0.20.3 typing_extensions==4.12.2
          # CIBW_TEST_COMMAND: "pytest -vx --capture=fd {project}/tests"
          CIBW_TEST_SKIP: "*universal2:arm64"
        with:
          package-dir: .
          output-dir: wheelhouse
          config-file: "{package}/pyproject.toml"

      - uses: actions/upload-artifact@v4.4.3
        with:
          name: dist-${{ matrix.os }}-${{ matrix.cibw_arch }}-${{ matrix.cibw_python }}
          path: wheelhouse/*.whl

  publish:
    needs: [build-sdist, build-wheels]
    runs-on: ubuntu-latest

    environment:
      name: testpypi
      url: https://test.pypi.org/p/ididi

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish distribution ðŸ“¦ to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/